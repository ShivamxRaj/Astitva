{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam raj\\\\OneDrive\\\\Desktop\\\\Learning\\\\dream\\\\frontend\\\\src\\\\components\\\\StarryBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarryBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let stars = [];\n\n    // Set canvas size\n    const setCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    // Create stars\n    const createStars = () => {\n      stars = [];\n      const numberOfStars = 200;\n      for (let i = 0; i < numberOfStars; i++) {\n        stars.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 2 + 1,\n          speed: Math.random() * 0.5 + 0.1,\n          brightness: Math.random() * 0.5 + 0.5\n        });\n      }\n    };\n\n    // Animate stars\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      stars.forEach(star => {\n        // Draw star\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.brightness})`;\n        ctx.fill();\n\n        // Move star down\n        star.y += star.speed;\n\n        // Reset star position when it goes off screen\n        if (star.y > canvas.height) {\n          star.y = 0;\n          star.x = Math.random() * canvas.width;\n        }\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    // Initialize\n    setCanvasSize();\n    createStars();\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      setCanvasSize();\n      createStars();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"absolute inset-0 w-full h-full\",\n    style: {\n      zIndex: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(StarryBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = StarryBackground;\nexport default StarryBackground;\nvar _c;\n$RefreshReg$(_c, \"StarryBackground\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","StarryBackground","_s","canvasRef","canvas","current","ctx","getContext","animationFrameId","stars","setCanvasSize","width","window","innerWidth","height","innerHeight","createStars","numberOfStars","i","push","x","Math","random","y","size","speed","brightness","animate","clearRect","forEach","star","beginPath","arc","PI","fillStyle","fill","requestAnimationFrame","handleResize","addEventListener","removeEventListener","cancelAnimationFrame","ref","className","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shivam raj/OneDrive/Desktop/Learning/dream/frontend/src/components/StarryBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst StarryBackground = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n    let stars = [];\r\n\r\n    // Set canvas size\r\n    const setCanvasSize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n\r\n    // Create stars\r\n    const createStars = () => {\r\n      stars = [];\r\n      const numberOfStars = 200;\r\n      \r\n      for (let i = 0; i < numberOfStars; i++) {\r\n        stars.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 2 + 1,\r\n          speed: Math.random() * 0.5 + 0.1,\r\n          brightness: Math.random() * 0.5 + 0.5\r\n        });\r\n      }\r\n    };\r\n\r\n    // Animate stars\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      stars.forEach(star => {\r\n        // Draw star\r\n        ctx.beginPath();\r\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.brightness})`;\r\n        ctx.fill();\r\n\r\n        // Move star down\r\n        star.y += star.speed;\r\n        \r\n        // Reset star position when it goes off screen\r\n        if (star.y > canvas.height) {\r\n          star.y = 0;\r\n          star.x = Math.random() * canvas.width;\r\n        }\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    // Initialize\r\n    setCanvasSize();\r\n    createStars();\r\n    animate();\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      setCanvasSize();\r\n      createStars();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className=\"absolute inset-0 w-full h-full\"\r\n      style={{ zIndex: 0 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StarryBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}